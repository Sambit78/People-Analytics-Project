attach(training_data)
# 1.2 Conducting Levene's test to test equality of variances ----
# One important assumption of the Independent-Samples t Test is that the variances in the
# sample groups are approximately equal or that the samples have homogeneity of variance.
# Levene’s Test for Equality of Variances is a test of whether the variances of the
# two samples/groups are approximately equal.
# Null Hypothesis : There is no difference in the variance between Training methods
#Levene's needs Training method to be a factor variable
Method <- factor(`Training Method`,
labels = c("Training Method A", "Training Method B"))
Freq1=table(Method)
Freq1
leveneTest(`Test Scores`, group = Method, center = mean)
# If you leave out the center=mean it will use the median which is also known as
# the Brown-Forsythe test for variances
leveneTest(`Test Scores`, group = Method)
# 1.3 Conducting Independent T Test - Equality of Means ----
# Assuming variances are equal based on Levene's Test
# Null Hypothesis : Their is no difference in mean scores from the 2 training methods
t.test(`Test Scores`~`Training Method`, var.equal=TRUE)
attach(training_data)
# 2. Trainings Impact on Performance based on Gender ----
Train_Intervention <-read.table("TrainingIntervention.txt",header=T,sep="\t")
glimpse(Train_Intervention)
# Create a regression Model
model1 =lm(ScanPminuteTime2 ~ educ + disability + Gender + Store + Weeks
+ age1 + age2 + age4 + age5 + age6 + age7 + age8 + age9 + age10 + Training + ScanPminute,data = Train_Intervention)
model1
anova(model1)
summary(model1)
coef(model1)
lm.beta(model1)
# Run a model with interaction variable of Gender
model2 = lm(ScanPminuteTime2 ~ Training*Gender)
summary(model2)
#interplot(model2,var1 = "Training",var2 = "Gender") +theme_few()
# Run a standard two-way interaction Plot
library(sjPlot)
library(sjmisc)
library(ggplot2)
plot1 <- plot_model(model = model2,type = "int",terms = c("Training","Gender"))
plot1
# References
# https://www.youtube.com/watch?v=4mkEZxgxMRA
# https://www.youtube.com/watch?v=GLbCuaI8SOQ
library(sjPlot)
library(sjmisc)
library(ggplot2)
plot1 <- plot_model(model = model2,type = "int",axis.title = "Scan Rates After Training Event",
axis.lim = c(1,40),title = "Employees' check out performance with or Without Training",terms = c("Training","Gender"))
plot1
library(sjPlot)
library(sjmisc)
library(ggplot2)
plot1 <- plot_model(model = model2,type = "int",axis.title = "Scan Rates After Training Event",
axis.lim = c(15,30),title = "Employees' check out performance with or Without Training",terms = c("Training","Gender"))
plot1
model2 = lm(ScanPminuteTime2 ~ Training*Gender)
summary(model2)
#interplot(model2,var1 = "Training",var2 = "Gender") +theme_few()
# Run a standard two-way interaction Plot
library(sjPlot)
library(sjmisc)
library(ggplot2)
plot1 <- plot_model(model = model2,type = "int",axis.title = "Scan Rates After Training Event",
title = "Employees' check out performance with or Without Training",terms = c("Training","Gender"))
plot1
plot1 + labs(x = "Training Undertaken")
Train_Intervention$Gender <- recode(Train_Intervention$Gender,'1 = "Male";2 = "Female";',as.factor.result = FALSE)
glimpse(Train_Intervention)
Train_Intervention$Gender <- recode(Train_Intervention$Gender,'1 = "Male";2 = "Female";',as.factor.result = FALSE)
Train_Intervention$Gender = factor(Train_Intervention$Gender,
levels = c(1,2),
labels = c('Male', 'Female'))
glimpse(Train_Intervention)
Train_Intervention$Gender = factor(Train_Intervention$Gender,
levels = c(1,2),
labels = c('Male', 'Female'))
Train_Intervention$Training = factor(Train_Intervention$Training,
levels = c(0,1),
labels = c('No', 'Yes'))
# Run a standard two-way interaction Plot
model3 = lm(ScanPminuteTime2 ~ Training*Gender)
summary(model3)
plot2 <- plot_model(model = model3,type = "int",axis.title = "Scan Rates After Training Event",
title = "Employees' check out performance with or Without Training",terms = c("Training","Gender"))
plot2 + labs(x = "Training Undertaken")
setwd("~/Google Drive/Data Analytics/Predictive HR Analytics/People-Analytics-Project/06 - Training Analytics")
# Libraries
#install.packages("interplot")
library(readxl)
library(car)
library(tidyverse)
library(ggthemes)
library(interplot)
# 1. Choose Training Type A or Training Type B ----
# 1.1 Load Data ----
training_data <- read_excel("New Starter Training.xlsx")
glimpse(training_data)
names(training_data)
attach(training_data)
# 1.2 Conducting Levene's test to test equality of variances ----
# One important assumption of the Independent-Samples t Test is that the variances in the
# sample groups are approximately equal or that the samples have homogeneity of variance.
# Levene’s Test for Equality of Variances is a test of whether the variances of the
# two samples/groups are approximately equal.
# Null Hypothesis : There is no difference in the variance between Training methods
#Levene's needs Training method to be a factor variable
Method <- factor(`Training Method`,
labels = c("Training Method A", "Training Method B"))
Freq1=table(Method)
Freq1
leveneTest(`Test Scores`, group = Method, center = mean)
# If you leave out the center=mean it will use the median which is also known as
# the Brown-Forsythe test for variances
leveneTest(`Test Scores`, group = Method)
# 1.3 Conducting Independent T Test - Equality of Means ----
# Assuming variances are equal based on Levene's Test
# Null Hypothesis : Their is no difference in mean scores from the 2 training methods
t.test(`Test Scores`~`Training Method`, var.equal=TRUE)
attach(training_data)
# 2. Trainings Impact on Performance based on Gender ----
Train_Intervention <-read.table("TrainingIntervention.txt",header=T,sep="\t")
glimpse(Train_Intervention)
# Create a regression Model
model1 =lm(ScanPminuteTime2 ~ educ + disability + Gender + Store + Weeks
+ age1 + age2 + age4 + age5 + age6 + age7 + age8 + age9 + age10 + Training + ScanPminute,data = Train_Intervention)
model1
anova(model1)
summary(model1)
coef(model1)
lm.beta(model1)
# Run a model with interaction variable of Gender
model2 = lm(ScanPminuteTime2 ~ Training*Gender)
summary(model2)
#interplot(model2,var1 = "Training",var2 = "Gender") +theme_few()
# Run a standard two-way interaction Plot
library(sjPlot)
library(sjmisc)
library(ggplot2)
plot1 <- plot_model(model = model2,type = "int",axis.title = "Scan Rates After Training Event",
title = "Employees' check out performance with or Without Training",terms = c("Training","Gender"))
plot1 + labs(x = "Training Undertaken")
# Relabel values for axis and legend
Train_Intervention$Gender = factor(Train_Intervention$Gender,
levels = c(1,2),
labels = c('Male', 'Female'))
Train_Intervention$Training = factor(Train_Intervention$Training,
levels = c(0,1),
labels = c('No', 'Yes'))
# Run a standard two-way interaction Plot
model3 = lm(ScanPminuteTime2 ~ Training*Gender)
summary(model3)
plot2 <- plot_model(model = model3,type = "int",axis.title = "Scan Rates After Training Event",
title = "Employees' check out performance with or Without Training",terms = c("Training","Gender"))
plot2 + labs(x = "Training Undertaken")
# References
# https://www.youtube.com/watch?v=4mkEZxgxMRA
# https://www.youtube.com/watch?v=GLbCuaI8SOQ
glimpse(Train_Intervention)
setwd("~/Google Drive/Data Analytics/Predictive HR Analytics/People-Analytics-Project/06 - Training Analytics")
# Libraries
#install.packages("interplot")
library(readxl)
library(car)
library(tidyverse)
library(ggthemes)
library(interplot)
# 1. Choose Training Type A or Training Type B ----
# 1.1 Load Data ----
training_data <- read_excel("New Starter Training.xlsx")
glimpse(training_data)
names(training_data)
attach(training_data)
# 1.2 Conducting Levene's test to test equality of variances ----
# One important assumption of the Independent-Samples t Test is that the variances in the
# sample groups are approximately equal or that the samples have homogeneity of variance.
# Levene’s Test for Equality of Variances is a test of whether the variances of the
# two samples/groups are approximately equal.
# Null Hypothesis : There is no difference in the variance between Training methods
#Levene's needs Training method to be a factor variable
Method <- factor(`Training Method`,
labels = c("Training Method A", "Training Method B"))
Freq1=table(Method)
Freq1
leveneTest(`Test Scores`, group = Method, center = mean)
# If you leave out the center=mean it will use the median which is also known as
# the Brown-Forsythe test for variances
leveneTest(`Test Scores`, group = Method)
# 1.3 Conducting Independent T Test - Equality of Means ----
# Assuming variances are equal based on Levene's Test
# Null Hypothesis : Their is no difference in mean scores from the 2 training methods
t.test(`Test Scores`~`Training Method`, var.equal=TRUE)
attach(training_data)
# 2. Trainings Impact on Performance based on Gender ----
Train_Intervention <-read.table("TrainingIntervention.txt",header=T,sep="\t")
glimpse(Train_Intervention)
# Create a regression Model
model1 =lm(ScanPminuteTime2 ~ educ + disability + Gender + Store + Weeks
+ age1 + age2 + age4 + age5 + age6 + age7 + age8 + age9 + age10 + Training + ScanPminute,data = Train_Intervention)
model1
anova(model1)
summary(model1)
coef(model1)
lm.beta(model1)
# Run a model with interaction variable of Gender
model2 = lm(ScanPminuteTime2 ~ Training*Gender)
summary(model2)
#interplot(model2,var1 = "Training",var2 = "Gender") +theme_few()
# Run a standard two-way interaction Plot
library(sjPlot)
library(sjmisc)
library(ggplot2)
plot1 <- plot_model(model = model2,type = "int",axis.title = "Scan Rates After Training Event",
title = "Employees' check out performance with or Without Training",terms = c("Training","Gender"))
plot1 + labs(x = "Training Undertaken")
# Relabel values for axis and legend
Train_Intervention$Gender = factor(Train_Intervention$Gender,
levels = c(1,2),
labels = c('Male', 'Female'))
Train_Intervention$Training = factor(Train_Intervention$Training,
levels = c(0,1),
labels = c('No', 'Yes'))
levels(Train_Intervention$Training) = c("No","Yes")
glimpse(Train_Intervention)
# Run a standard two-way interaction Plot
model3 = lm(ScanPminuteTime2 ~ Training*Gender)
summary(model3)
plot2 <- plot_model(model = model3,type = "int",axis.title = "Scan Rates After Training Event",
title = "Employees' check out performance with or Without Training",terms = c("Training","Gender"))
plot2 + labs(x = "Training Undertaken")
# References
# https://www.youtube.com/watch?v=4mkEZxgxMRA
# https://www.youtube.com/watch?v=GLbCuaI8SOQ
setwd("~/Google Drive/Data Analytics/Predictive HR Analytics/People-Analytics-Project/06 - Training Analytics")
# Libraries
#install.packages("interplot")
library(readxl)
library(car)
library(tidyverse)
library(ggthemes)
library(interplot)
# 1. Choose Training Type A or Training Type B ----
# 1.1 Load Data ----
training_data <- read_excel("New Starter Training.xlsx")
glimpse(training_data)
names(training_data)
attach(training_data)
# 1.2 Conducting Levene's test to test equality of variances ----
# One important assumption of the Independent-Samples t Test is that the variances in the
# sample groups are approximately equal or that the samples have homogeneity of variance.
# Levene’s Test for Equality of Variances is a test of whether the variances of the
# two samples/groups are approximately equal.
# Null Hypothesis : There is no difference in the variance between Training methods
#Levene's needs Training method to be a factor variable
Method <- factor(`Training Method`,
labels = c("Training Method A", "Training Method B"))
Freq1=table(Method)
Freq1
leveneTest(`Test Scores`, group = Method, center = mean)
# If you leave out the center=mean it will use the median which is also known as
# the Brown-Forsythe test for variances
leveneTest(`Test Scores`, group = Method)
# 1.3 Conducting Independent T Test - Equality of Means ----
# Assuming variances are equal based on Levene's Test
# Null Hypothesis : Their is no difference in mean scores from the 2 training methods
t.test(`Test Scores`~`Training Method`, var.equal=TRUE)
attach(training_data)
# 2. Trainings Impact on Performance based on Gender ----
Train_Intervention <-read.table("TrainingIntervention.txt",header=T,sep="\t")
glimpse(Train_Intervention)
# Create a regression Model
model1 =lm(ScanPminuteTime2 ~ educ + disability + Gender + Store + Weeks
+ age1 + age2 + age4 + age5 + age6 + age7 + age8 + age9 + age10 + Training + ScanPminute,data = Train_Intervention)
model1
anova(model1)
summary(model1)
coef(model1)
lm.beta(model1)
# Run a model with interaction variable of Gender
model2 = lm(ScanPminuteTime2 ~ Training*Gender)
summary(model2)
#interplot(model2,var1 = "Training",var2 = "Gender") +theme_few()
# Run a standard two-way interaction Plot
library(sjPlot)
library(sjmisc)
library(ggplot2)
plot1 <- plot_model(model = model2,type = "int",axis.title = "Scan Rates After Training Event",
title = "Employees' check out performance with or Without Training",terms = c("Training","Gender"))
plot1 + labs(x = "Training Undertaken")
# Relabel values for axis and legend
Train_Intervention$Gender = factor(Train_Intervention$Gender,
levels = c(1,2),
labels = c('Male', 'Female'))
Train_Intervention$Training = factor(Train_Intervention$Training,
levels = c(0,1),
labels = c('No', 'Yes'))
levels(Train_Intervention$Training) = c("No","Yes")
glimpse(Train_Intervention)
# Run a standard two-way interaction Plot
model3 = lm(ScanPminuteTime2 ~ Training*Gender)
summary(model3)
plot2 <- plot_model(model = model3,type = "int",axis.title = "Scan Rates After Training Event",
title = "Employees' check out performance with or Without Training")
plot2 + labs(x = "Training Undertaken")
# References
# https://www.youtube.com/watch?v=4mkEZxgxMRA
# https://www.youtube.com/watch?v=GLbCuaI8SOQ
setwd("~/Google Drive/Data Analytics/Predictive HR Analytics/People-Analytics-Project/06 - Training Analytics")
# Libraries
#install.packages("interplot")
library(readxl)
library(car)
library(tidyverse)
library(ggthemes)
library(interplot)
# 1. Choose Training Type A or Training Type B ----
# 1.1 Load Data ----
training_data <- read_excel("New Starter Training.xlsx")
glimpse(training_data)
names(training_data)
attach(training_data)
# 1.2 Conducting Levene's test to test equality of variances ----
# One important assumption of the Independent-Samples t Test is that the variances in the
# sample groups are approximately equal or that the samples have homogeneity of variance.
# Levene’s Test for Equality of Variances is a test of whether the variances of the
# two samples/groups are approximately equal.
# Null Hypothesis : There is no difference in the variance between Training methods
#Levene's needs Training method to be a factor variable
Method <- factor(`Training Method`,
labels = c("Training Method A", "Training Method B"))
Freq1=table(Method)
Freq1
leveneTest(`Test Scores`, group = Method, center = mean)
# If you leave out the center=mean it will use the median which is also known as
# the Brown-Forsythe test for variances
leveneTest(`Test Scores`, group = Method)
# 1.3 Conducting Independent T Test - Equality of Means ----
# Assuming variances are equal based on Levene's Test
# Null Hypothesis : Their is no difference in mean scores from the 2 training methods
t.test(`Test Scores`~`Training Method`, var.equal=TRUE)
attach(training_data)
# 2. Trainings Impact on Performance based on Gender ----
Train_Intervention <-read.table("TrainingIntervention.txt",header=T,sep="\t")
glimpse(Train_Intervention)
# Create a regression Model
model1 =lm(ScanPminuteTime2 ~ educ + disability + Gender + Store + Weeks
+ age1 + age2 + age4 + age5 + age6 + age7 + age8 + age9 + age10 + Training + ScanPminute,data = Train_Intervention)
model1
anova(model1)
summary(model1)
coef(model1)
lm.beta(model1)
# Run a model with interaction variable of Gender
model2 = lm(ScanPminuteTime2 ~ Training*Gender)
summary(model2)
#interplot(model2,var1 = "Training",var2 = "Gender") +theme_few()
# Run a standard two-way interaction Plot
library(sjPlot)
library(sjmisc)
library(ggplot2)
plot1 <- plot_model(model = model2,type = "int",axis.title = "Scan Rates After Training Event",
title = "Employees' check out performance with or Without Training",terms = c("Training","Gender"))
plot1 + labs(x = "Training Undertaken")
# Relabel values for axis and legend
Train_Intervention$Gender = factor(Train_Intervention$Gender,
levels = c(1,2),
labels = c('Male', 'Female'))
levels(Train_Intervention$Training) = c("No","Yes")
glimpse(Train_Intervention)
# Run a standard two-way interaction Plot
model3 = lm(ScanPminuteTime2 ~ Training*Gender)
summary(model3)
plot2 <- plot_model(model = model3,type = "int",axis.title = "Scan Rates After Training Event",
title = "Employees' check out performance with or Without Training")
plot2 + labs(x = "Training Undertaken")
# References
# https://www.youtube.com/watch?v=4mkEZxgxMRA
# https://www.youtube.com/watch?v=GLbCuaI8SOQ
glimpse(Train_Intervention)
model3 = lm(ScanPminuteTime2 ~ Training*Gender)
summary(model3)
setwd("~/Google Drive/Data Analytics/Predictive HR Analytics/People-Analytics-Project/06 - Training Analytics")
# Libraries
#install.packages("interplot")
library(readxl)
library(car)
library(tidyverse)
library(ggthemes)
library(interplot)
# 1. Choose Training Type A or Training Type B ----
# 1.1 Load Data ----
training_data <- read_excel("New Starter Training.xlsx")
glimpse(training_data)
names(training_data)
attach(training_data)
# 1.2 Conducting Levene's test to test equality of variances ----
# One important assumption of the Independent-Samples t Test is that the variances in the
# sample groups are approximately equal or that the samples have homogeneity of variance.
# Levene’s Test for Equality of Variances is a test of whether the variances of the
# two samples/groups are approximately equal.
# Null Hypothesis : There is no difference in the variance between Training methods
#Levene's needs Training method to be a factor variable
Method <- factor(`Training Method`,
labels = c("Training Method A", "Training Method B"))
Freq1=table(Method)
Freq1
leveneTest(`Test Scores`, group = Method, center = mean)
# If you leave out the center=mean it will use the median which is also known as
# the Brown-Forsythe test for variances
leveneTest(`Test Scores`, group = Method)
# 1.3 Conducting Independent T Test - Equality of Means ----
# Assuming variances are equal based on Levene's Test
# Null Hypothesis : Their is no difference in mean scores from the 2 training methods
t.test(`Test Scores`~`Training Method`, var.equal=TRUE)
attach(training_data)
# 2. Trainings Impact on Performance based on Gender ----
Train_Intervention <-read.table("TrainingIntervention.txt",header=T,sep="\t")
glimpse(Train_Intervention)
# Create a regression Model
model1 =lm(ScanPminuteTime2 ~ educ + disability + Gender + Store + Weeks
+ age1 + age2 + age4 + age5 + age6 + age7 + age8 + age9 + age10 + Training + ScanPminute,data = Train_Intervention)
model1
anova(model1)
summary(model1)
coef(model1)
lm.beta(model1)
# Run a model with interaction variable of Gender
model2 = lm(ScanPminuteTime2 ~ Training*Gender)
summary(model2)
#interplot(model2,var1 = "Training",var2 = "Gender") +theme_few()
# Run a standard two-way interaction Plot
library(sjPlot)
library(sjmisc)
library(ggplot2)
plot1 <- plot_model(model = model2,type = "int",axis.title = "Scan Rates After Training Event",
title = "Employees' check out performance with or Without Training",terms = c("Training","Gender"))
plot1 + labs(x = "Training Undertaken")
glimpse(Train_Intervention)
# Run a standard two-way interaction Plot
model3 = lm(ScanPminuteTime2 ~ as.factor(Training)* as.factor(Gender))
summary(model3)
plot2 <- plot_model(model = model3,type = "int",axis.title = "Scan Rates After Training Event",
title = "Employees' check out performance with or Without Training")
plot2 + labs(x = "Training Undertaken")
# References
# https://www.youtube.com/watch?v=4mkEZxgxMRA
# https://www.youtube.com/watch?v=GLbCuaI8SOQ
model3 = lm(ScanPminuteTime2 ~ as.factor(Training,levels = c(0,1),labels("Yes","No")) * Gender)
summary(model3)
plot2 <- plot_model(model = model3,type = "int",axis.title = "Scan Rates After Training Event",
title = "Employees' check out performance with or Without Training")
plot2 + labs(x = "Training Undertaken")
setwd("~/Google Drive/Data Analytics/Predictive HR Analytics/People-Analytics-Project/06 - Training Analytics")
# Libraries
#install.packages("interplot")
library(readxl)
library(car)
library(tidyverse)
library(ggthemes)
library(interplot)
# 1. Choose Training Type A or Training Type B ----
# 1.1 Load Data ----
training_data <- read_excel("New Starter Training.xlsx")
glimpse(training_data)
names(training_data)
attach(training_data)
# 1.2 Conducting Levene's test to test equality of variances ----
# One important assumption of the Independent-Samples t Test is that the variances in the
# sample groups are approximately equal or that the samples have homogeneity of variance.
# Levene’s Test for Equality of Variances is a test of whether the variances of the
# two samples/groups are approximately equal.
# Null Hypothesis : There is no difference in the variance between Training methods
#Levene's needs Training method to be a factor variable
Method <- factor(`Training Method`,
labels = c("Training Method A", "Training Method B"))
Freq1=table(Method)
Freq1
leveneTest(`Test Scores`, group = Method, center = mean)
# If you leave out the center=mean it will use the median which is also known as
# the Brown-Forsythe test for variances
leveneTest(`Test Scores`, group = Method)
# 1.3 Conducting Independent T Test - Equality of Means ----
# Assuming variances are equal based on Levene's Test
# Null Hypothesis : Their is no difference in mean scores from the 2 training methods
t.test(`Test Scores`~`Training Method`, var.equal=TRUE)
attach(training_data)
# 2. Trainings Impact on Performance based on Gender ----
Train_Intervention <-read.table("TrainingIntervention.txt",header=T,sep="\t")
glimpse(Train_Intervention)
# Create a regression Model
model1 =lm(ScanPminuteTime2 ~ educ + disability + Gender + Store + Weeks
+ age1 + age2 + age4 + age5 + age6 + age7 + age8 + age9 + age10 + Training + ScanPminute,data = Train_Intervention)
model1
anova(model1)
summary(model1)
coef(model1)
lm.beta(model1)
# Run a model with interaction variable of Gender
model2 = lm(ScanPminuteTime2 ~ Training*Gender)
summary(model2)
#interplot(model2,var1 = "Training",var2 = "Gender") +theme_few()
# Run a standard two-way interaction Plot
library(sjPlot)
library(sjmisc)
library(ggplot2)
plot1 <- plot_model(model = model2,type = "int",axis.title = "Scan Rates After Training Event",
title = "Employees' check out performance with or Without Training",terms = c("Training","Gender"))
plot1 + labs(x = "Training Undertaken")
# References
# https://www.youtube.com/watch?v=4mkEZxgxMRA
# https://www.youtube.com/watch?v=GLbCuaI8SOQ
